@import '_functions.scss';
// Hamburger
// =================================================
.hamburger {
  @include medio(absolute, 50%, 50%, -50%, -50%);
  display: inline-block;
  cursor: pointer;

  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;

  // Normalize (<button>)
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;

  &:hover {
    @if $hamburger-hover-use-filter == true {
      filter: $hamburger-hover-filter;
    }
    @else {
      opacity: $hamburger-hover-opacity;
    }
  }

  &.is-active {
    &:hover {
      @if $hamburger-hover-use-filter == true {
        filter: $hamburger-active-hover-filter;
      }
      @else {
        opacity: $hamburger-active-hover-opacity;
      }
    }

    .hamburger-inner,
    .hamburger-inner::before,
    .hamburger-inner::after {
      background-color: $hamburger-active-layer-color;
    }
  }
}

.hamburger-box {
  width: $hamburger-layer-width-small;
  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 1.5;
  display: inline-block;
  position: relative;
  @include med-query($medium){
    width: $hamburger-layer-width;
    height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
  }
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: 1px;

  &,
  &::before,
  &::after {
    width: $hamburger-layer-width-small;
    @include med-query($medium){
      width: $hamburger-layer-width;
    }
    height: $hamburger-layer-height;
    background-color: $hamburger-layer-color;
    border-radius: $hamburger-layer-border-radius;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease;
  }

  &::before,
  &::after {
    content: "";
    display: block;
  }

  &::before {
    top: ($hamburger-layer-spacing + ($hamburger-layer-height - 2)) * -1;
    @include med-query($medium){
      top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
    }
  }

  &::after {
    bottom: ($hamburger-layer-spacing + ($hamburger-layer-height - 2)) * -1;
    @include med-query($medium){
      bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
    }
  }
}
.video_cont{
    position: absolute;
    top: 0;
    bottom: 0;
    width: 100%;
    height: 100%; 
    overflow: hidden;
    background-color: white;
    z-index: 100000000;
    #video-tang, #video-tang-mobile{
        min-width: 100%; 
        min-height: 100%; 
        
        /* Setting width & height to auto prevents the browser from stretching or squishing the video */
        width: auto;
        height: auto;
        
        /* Center the video */
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);
    }
    #video-tang{
        display:none;
        @include med-query($medium){
          display: block;
        }
    }
    #video-tang-mobile{
        @include med-query($medium){
          display: none;
        }
    }
}
